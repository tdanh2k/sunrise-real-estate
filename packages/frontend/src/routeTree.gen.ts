/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as ClientImport } from './routes/_client'

// Create Virtual Routes

const ManagementIndexLazyImport = createFileRoute('/management/')()
const ClientIndexLazyImport = createFileRoute('/_client/')()
const ClientContactLazyImport = createFileRoute('/_client/contact')()
const ClientAboutLazyImport = createFileRoute('/_client/about')()
const ClientBlogIndexLazyImport = createFileRoute('/_client/blog/')()
const ClientFlatIdLazyImport = createFileRoute('/_client/flat/$id')()
const ClientBlogIdLazyImport = createFileRoute('/_client/blog/$id')()

// Create/Update Routes

const ClientRoute = ClientImport.update({
  id: '/_client',
  getParentRoute: () => rootRoute,
} as any)

const ManagementIndexLazyRoute = ManagementIndexLazyImport.update({
  path: '/management/',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/management/index.lazy').then((d) => d.Route),
)

const ClientIndexLazyRoute = ClientIndexLazyImport.update({
  path: '/',
  getParentRoute: () => ClientRoute,
} as any).lazy(() => import('./routes/_client/index.lazy').then((d) => d.Route))

const ClientContactLazyRoute = ClientContactLazyImport.update({
  path: '/contact',
  getParentRoute: () => ClientRoute,
} as any).lazy(() =>
  import('./routes/_client/contact.lazy').then((d) => d.Route),
)

const ClientAboutLazyRoute = ClientAboutLazyImport.update({
  path: '/about',
  getParentRoute: () => ClientRoute,
} as any).lazy(() => import('./routes/_client/about.lazy').then((d) => d.Route))

const ClientBlogIndexLazyRoute = ClientBlogIndexLazyImport.update({
  path: '/blog/',
  getParentRoute: () => ClientRoute,
} as any).lazy(() =>
  import('./routes/_client/blog/index.lazy').then((d) => d.Route),
)

const ClientFlatIdLazyRoute = ClientFlatIdLazyImport.update({
  path: '/flat/$id',
  getParentRoute: () => ClientRoute,
} as any).lazy(() =>
  import('./routes/_client/flat/$id.lazy').then((d) => d.Route),
)

const ClientBlogIdLazyRoute = ClientBlogIdLazyImport.update({
  path: '/blog/$id',
  getParentRoute: () => ClientRoute,
} as any).lazy(() =>
  import('./routes/_client/blog/$id.lazy').then((d) => d.Route),
)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_client': {
      preLoaderRoute: typeof ClientImport
      parentRoute: typeof rootRoute
    }
    '/_client/about': {
      preLoaderRoute: typeof ClientAboutLazyImport
      parentRoute: typeof ClientImport
    }
    '/_client/contact': {
      preLoaderRoute: typeof ClientContactLazyImport
      parentRoute: typeof ClientImport
    }
    '/_client/': {
      preLoaderRoute: typeof ClientIndexLazyImport
      parentRoute: typeof ClientImport
    }
    '/management/': {
      preLoaderRoute: typeof ManagementIndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/_client/blog/$id': {
      preLoaderRoute: typeof ClientBlogIdLazyImport
      parentRoute: typeof ClientImport
    }
    '/_client/flat/$id': {
      preLoaderRoute: typeof ClientFlatIdLazyImport
      parentRoute: typeof ClientImport
    }
    '/_client/blog/': {
      preLoaderRoute: typeof ClientBlogIndexLazyImport
      parentRoute: typeof ClientImport
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren([
  ClientRoute.addChildren([
    ClientAboutLazyRoute,
    ClientContactLazyRoute,
    ClientIndexLazyRoute,
    ClientBlogIdLazyRoute,
    ClientFlatIdLazyRoute,
    ClientBlogIndexLazyRoute,
  ]),
  ManagementIndexLazyRoute,
])

/* prettier-ignore-end */
