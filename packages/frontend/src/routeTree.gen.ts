/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as ManagementImport } from './routes/_management'
import { Route as ClientImport } from './routes/_client'
import { Route as ClientIndexImport } from './routes/_client/index'
import { Route as ClientContactImport } from './routes/_client/contact'
import { Route as ClientAboutImport } from './routes/_client/about'
import { Route as ManagementUserRouteImport } from './routes/_management/user/route'
import { Route as ManagementManagementRouteImport } from './routes/_management/management/route'
import { Route as ClientPostsIndexImport } from './routes/_client/posts/index'
import { Route as ClientBlogsIndexImport } from './routes/_client/blogs/index'
import { Route as ClientPostsIdImport } from './routes/_client/posts/$id'
import { Route as ClientBlogsIdImport } from './routes/_client/blogs/$id'
import { Route as ManagementUserPostsRouteImport } from './routes/_management/user/posts/route'
import { Route as ManagementUserBlogsRouteImport } from './routes/_management/user/blogs/route'
import { Route as ManagementManagementPostsRouteImport } from './routes/_management/management/posts/route'
import { Route as ManagementManagementBlogsRouteImport } from './routes/_management/management/blogs/route'
import { Route as ManagementManagementUserIndexImport } from './routes/_management/management/user/index'
import { Route as ManagementUserPostsPostIndexImport } from './routes/_management/user/posts/post/index'
import { Route as ManagementUserPostsPendingpostsIndexImport } from './routes/_management/user/posts/pending_posts/index'
import { Route as ManagementUserPostsDraftpostIndexImport } from './routes/_management/user/posts/draft_post/index'
import { Route as ManagementUserBlogsPendingblogIndexImport } from './routes/_management/user/blogs/pending_blog/index'
import { Route as ManagementUserBlogsDraftblogIndexImport } from './routes/_management/user/blogs/draft_blog/index'
import { Route as ManagementUserBlogsBlogIndexImport } from './routes/_management/user/blogs/blog/index'
import { Route as ManagementManagementPostsPosttypeIndexImport } from './routes/_management/management/posts/post_type/index'
import { Route as ManagementManagementPostsPostdetailIndexImport } from './routes/_management/management/posts/post_detail/index'
import { Route as ManagementManagementPostsPostIndexImport } from './routes/_management/management/posts/post/index'
import { Route as ManagementManagementPostsPendingpostIndexImport } from './routes/_management/management/posts/pending_post/index'
import { Route as ManagementManagementBlogsPendingblogIndexImport } from './routes/_management/management/blogs/pending_blog/index'
import { Route as ManagementManagementBlogsBlogtypeIndexImport } from './routes/_management/management/blogs/blog_type/index'
import { Route as ManagementManagementBlogsBlogIndexImport } from './routes/_management/management/blogs/blog/index'

// Create/Update Routes

const ManagementRoute = ManagementImport.update({
  id: '/_management',
  getParentRoute: () => rootRoute,
} as any)

const ClientRoute = ClientImport.update({
  id: '/_client',
  getParentRoute: () => rootRoute,
} as any)

const ClientIndexRoute = ClientIndexImport.update({
  path: '/',
  getParentRoute: () => ClientRoute,
} as any)

const ClientContactRoute = ClientContactImport.update({
  path: '/contact',
  getParentRoute: () => ClientRoute,
} as any)

const ClientAboutRoute = ClientAboutImport.update({
  path: '/about',
  getParentRoute: () => ClientRoute,
} as any)

const ManagementUserRouteRoute = ManagementUserRouteImport.update({
  path: '/user',
  getParentRoute: () => ManagementRoute,
} as any)

const ManagementManagementRouteRoute = ManagementManagementRouteImport.update({
  path: '/management',
  getParentRoute: () => ManagementRoute,
} as any)

const ClientPostsIndexRoute = ClientPostsIndexImport.update({
  path: '/posts/',
  getParentRoute: () => ClientRoute,
} as any)

const ClientBlogsIndexRoute = ClientBlogsIndexImport.update({
  path: '/blogs/',
  getParentRoute: () => ClientRoute,
} as any)

const ClientPostsIdRoute = ClientPostsIdImport.update({
  path: '/posts/$id',
  getParentRoute: () => ClientRoute,
} as any)

const ClientBlogsIdRoute = ClientBlogsIdImport.update({
  path: '/blogs/$id',
  getParentRoute: () => ClientRoute,
} as any)

const ManagementUserPostsRouteRoute = ManagementUserPostsRouteImport.update({
  path: '/posts',
  getParentRoute: () => ManagementUserRouteRoute,
} as any)

const ManagementUserBlogsRouteRoute = ManagementUserBlogsRouteImport.update({
  path: '/blogs',
  getParentRoute: () => ManagementUserRouteRoute,
} as any)

const ManagementManagementPostsRouteRoute =
  ManagementManagementPostsRouteImport.update({
    path: '/posts',
    getParentRoute: () => ManagementManagementRouteRoute,
  } as any)

const ManagementManagementBlogsRouteRoute =
  ManagementManagementBlogsRouteImport.update({
    path: '/blogs',
    getParentRoute: () => ManagementManagementRouteRoute,
  } as any)

const ManagementManagementUserIndexRoute =
  ManagementManagementUserIndexImport.update({
    path: '/user/',
    getParentRoute: () => ManagementManagementRouteRoute,
  } as any)

const ManagementUserPostsPostIndexRoute =
  ManagementUserPostsPostIndexImport.update({
    path: '/post/',
    getParentRoute: () => ManagementUserPostsRouteRoute,
  } as any)

const ManagementUserPostsPendingpostsIndexRoute =
  ManagementUserPostsPendingpostsIndexImport.update({
    path: '/pending_posts/',
    getParentRoute: () => ManagementUserPostsRouteRoute,
  } as any)

const ManagementUserPostsDraftpostIndexRoute =
  ManagementUserPostsDraftpostIndexImport.update({
    path: '/draft_post/',
    getParentRoute: () => ManagementUserPostsRouteRoute,
  } as any)

const ManagementUserBlogsPendingblogIndexRoute =
  ManagementUserBlogsPendingblogIndexImport.update({
    path: '/pending_blog/',
    getParentRoute: () => ManagementUserBlogsRouteRoute,
  } as any)

const ManagementUserBlogsDraftblogIndexRoute =
  ManagementUserBlogsDraftblogIndexImport.update({
    path: '/draft_blog/',
    getParentRoute: () => ManagementUserBlogsRouteRoute,
  } as any)

const ManagementUserBlogsBlogIndexRoute =
  ManagementUserBlogsBlogIndexImport.update({
    path: '/blog/',
    getParentRoute: () => ManagementUserBlogsRouteRoute,
  } as any)

const ManagementManagementPostsPosttypeIndexRoute =
  ManagementManagementPostsPosttypeIndexImport.update({
    path: '/post_type/',
    getParentRoute: () => ManagementManagementPostsRouteRoute,
  } as any)

const ManagementManagementPostsPostdetailIndexRoute =
  ManagementManagementPostsPostdetailIndexImport.update({
    path: '/post_detail/',
    getParentRoute: () => ManagementManagementPostsRouteRoute,
  } as any)

const ManagementManagementPostsPostIndexRoute =
  ManagementManagementPostsPostIndexImport.update({
    path: '/post/',
    getParentRoute: () => ManagementManagementPostsRouteRoute,
  } as any)

const ManagementManagementPostsPendingpostIndexRoute =
  ManagementManagementPostsPendingpostIndexImport.update({
    path: '/pending_post/',
    getParentRoute: () => ManagementManagementPostsRouteRoute,
  } as any)

const ManagementManagementBlogsPendingblogIndexRoute =
  ManagementManagementBlogsPendingblogIndexImport.update({
    path: '/pending_blog/',
    getParentRoute: () => ManagementManagementBlogsRouteRoute,
  } as any)

const ManagementManagementBlogsBlogtypeIndexRoute =
  ManagementManagementBlogsBlogtypeIndexImport.update({
    path: '/blog_type/',
    getParentRoute: () => ManagementManagementBlogsRouteRoute,
  } as any)

const ManagementManagementBlogsBlogIndexRoute =
  ManagementManagementBlogsBlogIndexImport.update({
    path: '/blog/',
    getParentRoute: () => ManagementManagementBlogsRouteRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_client': {
      id: '/_client'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof ClientImport
      parentRoute: typeof rootRoute
    }
    '/_management': {
      id: '/_management'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof ManagementImport
      parentRoute: typeof rootRoute
    }
    '/_management/management': {
      id: '/_management/management'
      path: '/management'
      fullPath: '/management'
      preLoaderRoute: typeof ManagementManagementRouteImport
      parentRoute: typeof ManagementImport
    }
    '/_management/user': {
      id: '/_management/user'
      path: '/user'
      fullPath: '/user'
      preLoaderRoute: typeof ManagementUserRouteImport
      parentRoute: typeof ManagementImport
    }
    '/_client/about': {
      id: '/_client/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof ClientAboutImport
      parentRoute: typeof ClientImport
    }
    '/_client/contact': {
      id: '/_client/contact'
      path: '/contact'
      fullPath: '/contact'
      preLoaderRoute: typeof ClientContactImport
      parentRoute: typeof ClientImport
    }
    '/_client/': {
      id: '/_client/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof ClientIndexImport
      parentRoute: typeof ClientImport
    }
    '/_management/management/blogs': {
      id: '/_management/management/blogs'
      path: '/blogs'
      fullPath: '/management/blogs'
      preLoaderRoute: typeof ManagementManagementBlogsRouteImport
      parentRoute: typeof ManagementManagementRouteImport
    }
    '/_management/management/posts': {
      id: '/_management/management/posts'
      path: '/posts'
      fullPath: '/management/posts'
      preLoaderRoute: typeof ManagementManagementPostsRouteImport
      parentRoute: typeof ManagementManagementRouteImport
    }
    '/_management/user/blogs': {
      id: '/_management/user/blogs'
      path: '/blogs'
      fullPath: '/user/blogs'
      preLoaderRoute: typeof ManagementUserBlogsRouteImport
      parentRoute: typeof ManagementUserRouteImport
    }
    '/_management/user/posts': {
      id: '/_management/user/posts'
      path: '/posts'
      fullPath: '/user/posts'
      preLoaderRoute: typeof ManagementUserPostsRouteImport
      parentRoute: typeof ManagementUserRouteImport
    }
    '/_client/blogs/$id': {
      id: '/_client/blogs/$id'
      path: '/blogs/$id'
      fullPath: '/blogs/$id'
      preLoaderRoute: typeof ClientBlogsIdImport
      parentRoute: typeof ClientImport
    }
    '/_client/posts/$id': {
      id: '/_client/posts/$id'
      path: '/posts/$id'
      fullPath: '/posts/$id'
      preLoaderRoute: typeof ClientPostsIdImport
      parentRoute: typeof ClientImport
    }
    '/_client/blogs/': {
      id: '/_client/blogs/'
      path: '/blogs'
      fullPath: '/blogs'
      preLoaderRoute: typeof ClientBlogsIndexImport
      parentRoute: typeof ClientImport
    }
    '/_client/posts/': {
      id: '/_client/posts/'
      path: '/posts'
      fullPath: '/posts'
      preLoaderRoute: typeof ClientPostsIndexImport
      parentRoute: typeof ClientImport
    }
    '/_management/management/user/': {
      id: '/_management/management/user/'
      path: '/user'
      fullPath: '/management/user'
      preLoaderRoute: typeof ManagementManagementUserIndexImport
      parentRoute: typeof ManagementManagementRouteImport
    }
    '/_management/management/blogs/blog/': {
      id: '/_management/management/blogs/blog/'
      path: '/blog'
      fullPath: '/management/blogs/blog'
      preLoaderRoute: typeof ManagementManagementBlogsBlogIndexImport
      parentRoute: typeof ManagementManagementBlogsRouteImport
    }
    '/_management/management/blogs/blog_type/': {
      id: '/_management/management/blogs/blog_type/'
      path: '/blog_type'
      fullPath: '/management/blogs/blog_type'
      preLoaderRoute: typeof ManagementManagementBlogsBlogtypeIndexImport
      parentRoute: typeof ManagementManagementBlogsRouteImport
    }
    '/_management/management/blogs/pending_blog/': {
      id: '/_management/management/blogs/pending_blog/'
      path: '/pending_blog'
      fullPath: '/management/blogs/pending_blog'
      preLoaderRoute: typeof ManagementManagementBlogsPendingblogIndexImport
      parentRoute: typeof ManagementManagementBlogsRouteImport
    }
    '/_management/management/posts/pending_post/': {
      id: '/_management/management/posts/pending_post/'
      path: '/pending_post'
      fullPath: '/management/posts/pending_post'
      preLoaderRoute: typeof ManagementManagementPostsPendingpostIndexImport
      parentRoute: typeof ManagementManagementPostsRouteImport
    }
    '/_management/management/posts/post/': {
      id: '/_management/management/posts/post/'
      path: '/post'
      fullPath: '/management/posts/post'
      preLoaderRoute: typeof ManagementManagementPostsPostIndexImport
      parentRoute: typeof ManagementManagementPostsRouteImport
    }
    '/_management/management/posts/post_detail/': {
      id: '/_management/management/posts/post_detail/'
      path: '/post_detail'
      fullPath: '/management/posts/post_detail'
      preLoaderRoute: typeof ManagementManagementPostsPostdetailIndexImport
      parentRoute: typeof ManagementManagementPostsRouteImport
    }
    '/_management/management/posts/post_type/': {
      id: '/_management/management/posts/post_type/'
      path: '/post_type'
      fullPath: '/management/posts/post_type'
      preLoaderRoute: typeof ManagementManagementPostsPosttypeIndexImport
      parentRoute: typeof ManagementManagementPostsRouteImport
    }
    '/_management/user/blogs/blog/': {
      id: '/_management/user/blogs/blog/'
      path: '/blog'
      fullPath: '/user/blogs/blog'
      preLoaderRoute: typeof ManagementUserBlogsBlogIndexImport
      parentRoute: typeof ManagementUserBlogsRouteImport
    }
    '/_management/user/blogs/draft_blog/': {
      id: '/_management/user/blogs/draft_blog/'
      path: '/draft_blog'
      fullPath: '/user/blogs/draft_blog'
      preLoaderRoute: typeof ManagementUserBlogsDraftblogIndexImport
      parentRoute: typeof ManagementUserBlogsRouteImport
    }
    '/_management/user/blogs/pending_blog/': {
      id: '/_management/user/blogs/pending_blog/'
      path: '/pending_blog'
      fullPath: '/user/blogs/pending_blog'
      preLoaderRoute: typeof ManagementUserBlogsPendingblogIndexImport
      parentRoute: typeof ManagementUserBlogsRouteImport
    }
    '/_management/user/posts/draft_post/': {
      id: '/_management/user/posts/draft_post/'
      path: '/draft_post'
      fullPath: '/user/posts/draft_post'
      preLoaderRoute: typeof ManagementUserPostsDraftpostIndexImport
      parentRoute: typeof ManagementUserPostsRouteImport
    }
    '/_management/user/posts/pending_posts/': {
      id: '/_management/user/posts/pending_posts/'
      path: '/pending_posts'
      fullPath: '/user/posts/pending_posts'
      preLoaderRoute: typeof ManagementUserPostsPendingpostsIndexImport
      parentRoute: typeof ManagementUserPostsRouteImport
    }
    '/_management/user/posts/post/': {
      id: '/_management/user/posts/post/'
      path: '/post'
      fullPath: '/user/posts/post'
      preLoaderRoute: typeof ManagementUserPostsPostIndexImport
      parentRoute: typeof ManagementUserPostsRouteImport
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  ClientRoute: ClientRoute.addChildren({
    ClientAboutRoute,
    ClientContactRoute,
    ClientIndexRoute,
    ClientBlogsIdRoute,
    ClientPostsIdRoute,
    ClientBlogsIndexRoute,
    ClientPostsIndexRoute,
  }),
  ManagementRoute: ManagementRoute.addChildren({
    ManagementManagementRouteRoute: ManagementManagementRouteRoute.addChildren({
      ManagementManagementBlogsRouteRoute:
        ManagementManagementBlogsRouteRoute.addChildren({
          ManagementManagementBlogsBlogIndexRoute,
          ManagementManagementBlogsBlogtypeIndexRoute,
          ManagementManagementBlogsPendingblogIndexRoute,
        }),
      ManagementManagementPostsRouteRoute:
        ManagementManagementPostsRouteRoute.addChildren({
          ManagementManagementPostsPendingpostIndexRoute,
          ManagementManagementPostsPostIndexRoute,
          ManagementManagementPostsPostdetailIndexRoute,
          ManagementManagementPostsPosttypeIndexRoute,
        }),
      ManagementManagementUserIndexRoute,
    }),
    ManagementUserRouteRoute: ManagementUserRouteRoute.addChildren({
      ManagementUserBlogsRouteRoute: ManagementUserBlogsRouteRoute.addChildren({
        ManagementUserBlogsBlogIndexRoute,
        ManagementUserBlogsDraftblogIndexRoute,
        ManagementUserBlogsPendingblogIndexRoute,
      }),
      ManagementUserPostsRouteRoute: ManagementUserPostsRouteRoute.addChildren({
        ManagementUserPostsDraftpostIndexRoute,
        ManagementUserPostsPendingpostsIndexRoute,
        ManagementUserPostsPostIndexRoute,
      }),
    }),
  }),
})

/* prettier-ignore-end */
